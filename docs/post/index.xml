<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on xiaopan&#39;s blog</title>
    <link>https://ixiaopan.github.io/blog/post/</link>
    <description>Recent content in Posts on xiaopan&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 14 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://ixiaopan.github.io/blog/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>《Effective JavaScript》</title>
      <link>https://ixiaopan.github.io/blog/post/fe/effective-js/</link>
      <pubDate>Thu, 14 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ixiaopan.github.io/blog/post/fe/effective-js/</guid>
      <description>floating-point numbers Number 类型 follow IEE 754 的规范，即双精度浮点数， 浮点数运算会造成误差，比如 0.1 + 0.2 // 0.30000000000000004 能表示的安全整数的范围大小在 [-2^53 + 1, 2^53 - 1] 之间，在此范围内的整数，</description>
    </item>
    
    <item>
      <title>CSS Box Model</title>
      <link>https://ixiaopan.github.io/blog/post/fe/css-box-model/</link>
      <pubDate>Sat, 09 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ixiaopan.github.io/blog/post/fe/css-box-model/</guid>
      <description>新开一个系列，从 w3c spec 的角度梳理 CSS 知识点，先从 box model 开始。 box model css 把文档树中的每个元素描述为一个 box，通过相关的属性决定每个 box 的大小、位置、在画</description>
    </item>
    
    <item>
      <title>Audio Sprite</title>
      <link>https://ixiaopan.github.io/blog/post/fe/audio-sprite/</link>
      <pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ixiaopan.github.io/blog/post/fe/audio-sprite/</guid>
      <description>Background 业务中遇到一个 tts 生成音频并播放的需求，为了节省 tts 生成成本，属于同一个音色的所有文案会生成同一个音频文件，但是前端要按正常的顺序播放。举个例</description>
    </item>
    
    <item>
      <title>Polling</title>
      <link>https://ixiaopan.github.io/blog/post/fe/poll/</link>
      <pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ixiaopan.github.io/blog/post/fe/poll/</guid>
      <description>业务中或多或少会遇到服务端无法立刻返回结果的情况，一般解决方案是轮询接口 Polling，但除此之外，还有其他数据推送方案，比如 Long Pollin</description>
    </item>
    
    <item>
      <title>《Game Programming Patterns》</title>
      <link>https://ixiaopan.github.io/blog/post/fe/pattern/</link>
      <pubDate>Mon, 15 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ixiaopan.github.io/blog/post/fe/pattern/</guid>
      <description>最近了读了关于设计模式的一本书，《Game Programming Patterns》虽然是说游戏的，但书中介绍的设计模式在 web 开发中也很常见，比如 singleton/observer/dirty check 等。不过由于书</description>
    </item>
    
    <item>
      <title>服务端实现</title>
      <link>https://ixiaopan.github.io/blog/post/fe/infras-server/</link>
      <pubDate>Tue, 02 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ixiaopan.github.io/blog/post/fe/infras-server/</guid>
      <description>Background 前面一系列关于基建的文章主要侧重子模块的实现，但是技术选型还没有确定，此外虽然模块功能已经确定，但还缺少服务端必不可少的基础服务，比如日志</description>
    </item>
    
    <item>
      <title>迭代管理&amp;发布平台 02</title>
      <link>https://ixiaopan.github.io/blog/post/fe/infras-basement-2/</link>
      <pubDate>Sat, 30 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ixiaopan.github.io/blog/post/fe/infras-basement-2/</guid>
      <description>Background 之前介绍了开发这个平台的初衷以及平台具有的功能，是因为当下工作流太割裂 需求/技术文档在飞书，但不知道该需求对应哪个分支 代码托管在 gitla</description>
    </item>
    
    <item>
      <title>Upload</title>
      <link>https://ixiaopan.github.io/blog/post/fe/upload/</link>
      <pubDate>Sat, 16 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ixiaopan.github.io/blog/post/fe/upload/</guid>
      <description>Background 业务中涉及大量上传，应该说上传是业务的基石，因此只有理解了上传的逻辑，才能服务好业务。本文主要从以下几个方面总结关于上传的开发经验 使用OS</description>
    </item>
    
    <item>
      <title>包发布管理平台</title>
      <link>https://ixiaopan.github.io/blog/post/fe/infras-npm/</link>
      <pubDate>Mon, 11 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ixiaopan.github.io/blog/post/fe/infras-npm/</guid>
      <description>Background 之前介绍过用 verdaccio 搭建私有 npm 源，公司内部用到的包可以通过 npm publish 发布上去。不过随着包越来越多，开发者也越来越多，只用 npm publish 已经不能满足现有的诉求了，</description>
    </item>
    
    <item>
      <title>性能监控SDK</title>
      <link>https://ixiaopan.github.io/blog/post/fe/infras-monitor/</link>
      <pubDate>Thu, 07 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ixiaopan.github.io/blog/post/fe/infras-monitor/</guid>
      <description>Background 一开始也没想要做监控，当时其实是接入了阿里的 arms，但是接入一段时间后，觉得用起来不舒服，不知道是不是使用姿势不对，而且还收费，因此才有</description>
    </item>
    
  </channel>
</rss>
